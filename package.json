{
  "name": "draco-sports-manager",
  "version": "1.0.0",
  "description": "Draco Sports Manager - Node.js Migration",
  "private": true,
  "workspaces": {
    "packages": [
      "dbMigration",
      "draco-mobile",
      "draco-nodejs/backend",
      "draco-nodejs/frontend-next",
      "draco-nodejs/shared/*",
      "draco-nodejs/stoplight-assets"
    ]
  },
  "scripts": {
    "prepare": "husky",
    "worktree:cleanup": "bash worktree-cleanup.sh",
    "worktree:ports": "cat draco-nodejs/.worktree-ports.json | jq .",
    "worktree:status": "bash worktree-status.sh",
    "stop": "bash scripts/stop-processes.sh",
    "stop:backend": "bash scripts/stop-backend.sh",
    "stop:frontend": "bash scripts/stop-frontend.sh",
    "machine:ip": "node -e \"const os=require('os'); const interfaces=os.networkInterfaces(); const ips=Object.values(interfaces).flatMap(list=>list||[]).filter(iface=>iface&&iface.family==='IPv4'&&!iface.internal).map(iface=>iface.address); if(!ips.length){console.error('No IPv4 address found'); process.exit(1);} console.log(ips[0]);\"",
    "backend:start": "npm start -w @draco/backend",
    "backend:build": "npm run build -w @draco/backend",
    "backend:dev": "npm run dev -w @draco/backend",
    "backend:test": "npm test -w @draco/backend",
    "backend:install": "npm install -w @draco/backend",
    "backend:prisma-generate": "npm exec --workspace @draco/backend -- prisma generate",
    "backend:migrate-passwords": "npm run migrate-passwords -w @draco/backend",
    "backend:test-passwords": "npm run test-passwords -w @draco/backend",
    "backend:lint": "npm run lint -w @draco/backend",
    "backend:lint:fix": "npm run lint:fix -w @draco/backend",
    "backend:format": "npm run format -w @draco/backend",
    "backend:type-check": "npm run type-check -w @draco/backend",
    "backend:clean": "npm run clean -w @draco/backend",
    "backend:docs:generate": "npm run docs:generate -w @draco/backend",
    "frontend:start": "npm run start -w @draco/frontend-next",
    "frontend:build": "npm run build -w @draco/frontend-next",
    "frontend:test": "npm test -w @draco/frontend-next",
    "frontend:install": "npm install -w @draco/frontend-next",
    "frontend:lint": "npm run lint -w @draco/frontend-next",
    "frontend:lint:fix": "npm run lint:fix -w @draco/frontend-next",
    "frontend:format": "npm run format -w @draco/frontend-next",
    "frontend:type-check": "npm run type-check -w @draco/frontend-next",
    "dev": "concurrently \"npm run dev -w @draco/backend\" \"npm run dev -w @draco/frontend-next\"",
    "dev:debug": "concurrently \"npm run dev:debug -w @draco/backend\" \"npm run dev -w @draco/frontend-next\"",
    "build": "npm run build -w @draco/shared-schemas && npm run sync:api && npm run build -w @draco/backend && npm run build -w @draco/frontend-next",
    "lint": "npm run lint --workspaces",
    "lint:fix": "npm run lint:fix --workspaces",
    "format": "npm run format --workspaces",
    "type-check": "npm run type-check --workspaces",
    "test": "npm run test --workspaces",
    "start": "concurrently \"npm start -w @draco/backend\" \"npm start -w @draco/frontend-next\"",
    "secrets:update-baseline": "node scripts/update-baseline.js",
    "sync:api": "npm -w @draco/backend run generate:openapi && npm -w @draco/backend run generate:client",
    "mobile:start": "npm run start -w @draco/mobile",
    "mobile:lint": "npm run lint -w @draco/mobile",
    "mobile:test": "npm run test -w @draco/mobile",
    "mobile:type-check": "npm run type-check -w @draco/mobile",
    "mobile:format": "npm run format -w @draco/mobile"
  },
  "overrides": {
    "react-native": "0.81.4"
  },
  "devDependencies": {
    "concurrently": "^9.1.0",
    "husky": "^9.1.7",
    "prettier": "^3.6.2",
    "typescript": "^5.8.3",
    "eslint": "^9.33.0",
    "@types/node": "^24.0.1",
    "lint-staged": "^16.1.2",
    "vitest": "^2.0.5"
  },
  "lint-staged": {
    "draco-nodejs/**/*.{js,jsx,ts,tsx}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "expo-network": "~8.0.7"
  }
}
