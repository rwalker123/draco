@model SportsManager.ViewModels.LeagueSeasonsViewModel
@{
    ViewBag.Title = @Model.AccountName + " Season Setup";
}

@section head {
@Styles.Render("~/Content/themes/base/css")
    <style type="text/css">
        h3.seasonHeader {
            font-size: 24px;
        }

        ul {
            list-style-type: none;
        }

        input.currentSeason {
            display: none;
        }

        input[type="text"] {
            height:30px;
        }
    </style>
}

<div class="jumbotron">
    @Header.DisplayHeader("Season Setup", Model.AccountName, Model.AccountLogoUrl)
    <p class="help-block">Seasons allow you to store a history of your league. Each season contains its own set of teams, players, and statistics.</p>
    <h2 id="currentSeasonDisplay"></h2>
    <p class="help-block">To set a new season, select any existing season below or create a new season.</p>
</div> <!-- jumbotron -->

<form class="form-inline" role="form" style="margin-top:20px">
    <small>add season</small><br />
    <div class="form-group">
        <label for="newSeasonName" class="sr-only">Season Name</label>
        <input id="newSeasonName" style="width:300px" type="text" class="form-control" placeholder="enter season name" pattern=".{1,}" title="Must supply a name" />
        <button type="button" class="btn btn-primary" onclick="javascript: seasonSetupData.addSeason()"><span class="glyphicon glyphicon-plus"></span></button>
    </div>
</form>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Confirm Delete Season</h4>
            </div>
            <div class="modal-body">
               You are about to delete a season. All data associated with the season will be permanently deleted. You cannot undo this operation. Are you sure you want to continue? 
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="confirmDeleteBtn">Continue</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="accordion" style="margin-top:20px">
</div>

@section scripts
{
        @Scripts.Render("~/bundles/jsrender")

        <script id="seasonTemplate" type="text/x-jsrender">
            <h3 class="seasonHeader" id='seasonHeader_{{:Id}}'><a id='seasonHeaderLink_{{:Id}}' href="#">{{>Name}}</a></h3>
            <div id='seasonData_{{:Id}}'>
                <form class="form-inline" role="form" >
                    <small>update season name</small><br />
                    <div class="form-group">
                        <label for="newSeasonName_{{:Id}}" class="sr-only">Season Name</label>
                        <input id="newSeasonName_{{:Id}}" value='{{>Name}}' style="width:300px" type="text" class="form-control" placeholder="enter season name" pattern=".{1,}" title="Must supply a name" />
                        <button type="button" class="btn btn-default" onclick="javascript:seasonSetupData.editSeason({{:Id}})">Update Name</button>
                        <button type="button" class="btn btn-danger" onclick="javascript:seasonSetupData.deleteSeason({{:Id}})"><span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </form>

                <br />
                <button id='setCurrentSeasonBtn_{{:Id}}' type="button" class="btn btn-success" onclick="javascript:seasonSetupData.setCurrentSeason({{:Id}})">Set as Current</button>
            </div>
        </script>

        <script type="text/javascript" src="~/Scripts/seasonsetup.js"></script>

        <script type="text/javascript">

            var seasonSetupData = new SeasonSetupClass(@Model.AccountId);

            $(document).ready(function () {
                seasonSetupData.fillSeasons();
            });

        </script>
    }
