<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta content="Baseball, Golf, League, Team, Score" name="keywords" />
    <meta name="description" content="Create Baseball League, Teams. Track Golf Leagues and Handicaps." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>

    @Html.Raw(JSNLog.JavascriptLogging.Configure())

    <!-- google analytics -->
    <script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-51286344-1', 'detroitmsbl.com');
    ga('send', 'pageview');

    </script>

    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

    <script type="text/javascript">
        window.config = {
            rootUri : '@System.Web.VirtualPathUtility.ToAbsolute("~/")'.slice(0, -1)
        };
    </script>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    @Styles.Render("~/Content/fontawesome")
    @Styles.Render("~/Content/bootstrap")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @RenderSection("head", required: false)
</head>
<body>
    @RenderSection("facebooklike", required: false)
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-menu">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @if (String.IsNullOrEmpty((String)ViewData["AccountName"]))
                {
                    ViewData["AccountName"] = "ezRecSports.com";
                    @Html.ActionLink((String)ViewData["AccountName"], "Index", "Home", null, new { @class = "navbar-brand" });
                }
                else {
                    @Html.ActionLink((String)ViewData["AccountName"], "Home", "League", new { area = "Baseball", accountId = ViewData["AccountId"] }, new { @class = "navbar-brand" });
                }
            </div>
            <div class="navbar-menu navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (ViewData["AccountId"] != null)
                    {
                        Html.RenderPartial("AccountMenu", ViewData["AccountId"]);
                    }
                    else
                    {
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("About", "About", "Home")</li>
                        <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    }
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
@if (ViewData["AccountId"] != null && ViewData["IsAdmin"] != null && ViewData.Model.IsAdmin)
{
    <div class="navbar navbar-inverse navbar-fixed-bottom" >
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".admin-navbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <span class="navbar-brand">Admin</span>
            </div>
            <div class="admin-navbar navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @{Html.RenderAction("AdminLinks", "Home", new { area = "", accountId = ViewData["AccountId"] });}
                </ul>
            </div>
        </div>
    </div>
}
    <div class="container body-content">
        <div class="center-block noPrint">
            @*<div class="col-sm-6 center-block">*@
                <!-- Responsive Ad -->
                <ins class="adsbygoogle adslot_1"
                     style="display:block"
                     data-ad-client="ca-pub-0207497877026395"
                     data-ad-slot="2033919729"
                     data-ad-format="horizontal"></ins>
                <script>
                    (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
            @*</div>*@
        </div>
        @RenderBody()
        <footer class="noPrint">
            <hr />
            <p>&copy; @DateTime.Now.Year - @ViewData["AccountName"]</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/typeahead")

    <script>
        function reportAjaxError(url, xhr, ajaxOptions, thrownError) {
            JL().fatal({
                url: url,
                msg: "AJAX error response",
                errorThrown: thrownError,
                jqXHR: xhr,
                textStatus: ajaxOptions
            });
            //alert("Caught error: Status: " + xhr.status + ". Error: " + thrownError);
        }

        $(document).ready(function () {
            window.onerror = function (errorMsg, url, lineNumber, column, errorObj) {

                // Send object with all data to server side log, using severity fatal, 
                // from logger "onerrorLogger"
                JL("onerrorLogger").fatalException({
                    "msg": "Exception!",
                    "errorMsg": errorMsg, "url": url,
                    "line number": lineNumber, "column": column
                }, errorObj);

                // Tell browser to run its own error handler as well   
                return false;
            }


            $.ajaxSetup({
                // put your favorite error function here: 
                error: function (jqXHR, ajaxOptions, thrownError) {
                    reportAjaxError(jqXHR.url, jqXHR, ajaxOptions, thrownError);
                },
                beforeSend: function (jqXHR, settings) {
                    jqXHR.url = settings.url;
                },

            });

        });

    </script>
    @*JQuery must be included before boostrap*@
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
