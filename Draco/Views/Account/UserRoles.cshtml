@model SportsManager.ViewModels.UserRolesViewModel

@{
    ViewBag.Title = @Model.AccountName + " User Roles";
}

@section head
{

    @Styles.Render("~/Content/themes/base/css")

<style type="text/css">
    h3.adminHeader
    {
        font-size:24px;
    }

    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
        /* prevent horizontal scrollbar */
        overflow-x: hidden;
    }

    .rolesMenuItem
    {
        cursor: pointer;
    }   
     
</style>
}


<div class="jumbotron">
    <h1>@ViewBag.Title.</h1>
    <p class="help-block">Define roles for users for your account.</p>
</div> <!-- content-wrapper -->

@if (Model.IsAccountOwner) 
{
<div id="accountOwner">
<div id="changeAccountOwner" style="max-width:500px;text-align:center">
    <h3 style="display:inline-block">You are the Account Owner</h3> <button type="button" class="btn btn-warning" onclick="userRolesData.startChangeAccountOwner()">Change</button>
    <p class="help-block">The account owner, by default, has all administrative privledges for the entire site. You don't have to be added to any administration group below.</p>
</div>
<div id="changeAccountOwnerWarning" style="max-width:500px;text-align:center;display: none">
<div class="alert alert-warning">
    <strong>Warning!</strong> You can only change the account owner if you are the account owner. If you change the account owner to someone else, you will not be able
    to change it back. Only the new account owner will be able to change it back.
</div>
<h4>Change Account Owner</h4>
<span>(type last name to begin search)</span><br />
<div>
    <input style="width:350px" id="ownerPlayerSelect"/>
    <button type="button" class="btn btn-success" onclick="userRolesData.changeAccountOwner(@Model.AccountId)">Change</button>
    <button type="button" class="btn btn-danger" onclick="userRolesData.cancelChangeAccountOwner()">Cancel</button>
</div>
<hr />
    
</div>
</div>
}

<div id="accordion">
    <h3 class="adminHeader" id="AdminHeader_@Model.AccountAdminId">Account Administrators</h3>
    <div id="AdminData_@Model.AccountAdminId">
        <p>Account administrators have access to everything in the account. This includes leagues, teams, photos and all setup related features.</p>

        <h4>Add Account Administrator</h4>
        <span>(type last name to begin search)</span><br />
        <div id="div_playerSelect_@Model.AccountAdminId">
            <input style="vertical-align:middle" id="playerSelect"/>
            <button type="button" class="btn btn-default" onclick="javascript: userRolesData.addSelectedUserToRole('@Model.AccountAdminId')">Add</button>
        </div>
        <hr />

        <p style="font-style:italic;max-width:400px;display:none" id="noAdminText_@Model.AccountAdminId">No Administrators defined. Click the add button to add administrators to the selected group.</p>
        <div id="adminsList_@Model.AccountAdminId" data-hasdata="false" style="display:none">

        </div>
    </div>
    <h3 class="adminHeader" id="AdminHeader_@Model.AccountPhotoAdminId">Account Photo Administrators</h3>
    <div id="AdminData_@Model.AccountPhotoAdminId">
        <p>Account photo administrators have access to all photo and video functions on the site. They may upload, approve, and delete any photo on the site.</p>

        <h4>Add Account Photo Administrator</h4>
        <span>(type last name to begin search)</span><br />
        <div id="div_playerSelect_@Model.AccountPhotoAdminId">

            <button type="button" class="btn btn-default" onclick="javascript: userRolesData.addSelectedUserToRole('@Model.AccountPhotoAdminId')">Add</button>
        </div>
        <hr />

        <p style="font-style:italic;max-width:400px;display:none" id="noAdminText_@Model.AccountPhotoAdminId">No Administrators defined. Click the add button to add administrators to the selected group.</p>
        <div id="adminsList_@Model.AccountPhotoAdminId" data-hasdata="false" style="display:none">
        </div>
    </div>
    <h3 class="adminHeader" id="AdminHeader_@Model.LeagueAdminId">League Administrators</h3>
    <div id="AdminData_@Model.LeagueAdminId">
        <p>League administrators have access to all functions for a specific league. The can create divisions and teams for a league, but cannot create or delete leagues in the account.</p>

        <h4>Add League Administrator</h4>
        <span>(type last name to begin search)</span><br />
        <div id="div_playerSelect_@Model.LeagueAdminId">
            <select style="vertical-align:middle;margin-left:3px;font-size:20px"  id="avaliableLeagues" ></select>
            <button type="button" class="btn btn-default" onclick="javascript: userRolesData.addSelectedUserToRole('@Model.LeagueAdminId')">Add</button>
        </div>
        <hr />

        <p style="font-style:italic;max-width:400px;display:none" id="noAdminText_@Model.LeagueAdminId">No Administrators defined. Click the add button to add administrators to the selected group.</p>
        <div id="adminsList_@Model.LeagueAdminId" data-hasdata="false" style="display:none">
        </div>
    </div>
    <h3 class="adminHeader" id="AdminHeader_@Model.TeamAdminId">Team Administrators</h3>
    <div id="AdminData_@Model.TeamAdminId">
        <p>Team administrators have the same access to a team that a manager does. They can enter game statistics and recaps, make announcements, and enter team sponsors.</p>

        <h4>Add Team Administrator</h4>
        <span>(type last name to begin search)</span><br />
        <div id="div_playerSelect_@Model.TeamAdminId">
            <select style="vertical-align:middle;margin-left:3px;font-size:20px" id="teamSelect" ></select>
            <button type="button" class="btn btn-default" onclick="javascript: userRolesData.addSelectedUserToRole('@Model.TeamAdminId')">Add</button>
        </div>
        <hr />

        <p style="font-style:italic;max-width:400px;display:none" id="noAdminText_@Model.TeamAdminId">No Administrators defined. Click the add button to add administrators to the selected group.</p>
        <div id="adminsList_@Model.TeamAdminId" data-hasdata="false" style="display:none">
        </div>
    </div>
    <h3 class="adminHeader" id="AdminHeader_@Model.TeamPhotoAdminId">Team Photo Administrators</h3>
    <div id="AdminData_@Model.TeamPhotoAdminId">
        <p>Team photo administrators can manage all photos and videos related to a specific team.</p>

        <h4>Add Team Photo Administrator</h4>
        <span>(type last name to begin search)</span><br />
        <div id="div_playerSelect_@Model.TeamPhotoAdminId">

            <button type="button" class="btn btn-default" onclick="javascript: userRolesData.addSelectedUserToRole('@Model.TeamPhotoAdminId')">Add</button>
        </div>
        <hr />

        <p style="font-style:italic;max-width:400px;display:none" id="noAdminText_@Model.TeamPhotoAdminId">No Administrators defined. Click the add button to add administrators to the selected group.</p>
        <div id="adminsList_@Model.TeamPhotoAdminId" data-hasdata="false" style="display:none">
        </div>
    </div>
</div>


@section scripts {

@Scripts.Render("~/bundles/jsrender")

<script id="adminItemTemplate" type="text/x-jsrender">
<div id='div_adminItem{{:~roleId}}_{{:RoleData}}_{{:Id}}'>
    <button type='button' class="btn btn-warning" onclick='javascript:userRolesData.removeUserFromRole("{{:Id}}", "{{:~roleId}}", {{:RoleData}});'>Remove</button>
    {{if PhotoURL}}
        <img class='playerPhoto' src='{{:PhotoURL}}' alt='{{:LastName}}'/>
    {{else}}
        <img class='playerPhoto' src='/Images/defaultperson.png' alt='{{:LastName}}'/>            
    {{/if}}
    <span style='font-size:x-large;padding-left:10px;padding-right:10px'>
        {{:FirstName}} {{:LastName}} {{:RoleDataText}}
    </span>

</div>
</script>

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-qtip-1.0.0-rc3171452/jquery.qtip-1.0.0-rc3.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/imagetooltip.js")"></script>
<script type="text/javascript" src="~/Scripts/userroles.js"></script>

<script type="text/javascript">
    var userRolesData = new UserRoleClass(@Model.AccountId, '@Model.CurrentUserId');

    $(document).ready(function () {
        // Ajax state is not remembered when clicking "back" button. Whenever a change is made with Ajax
        // on this page, hash is set to update. If back is pressed in that case, then reload the page.
        if (window.location.hash == '#update') {
            window.location.hash = '';
            window.location.reload();
        }

        userRolesData.makeAccordion();

        $("input#playerSelect, input#ownerPlayerSelect").autocomplete({

            source: function (request, response) {
                var searchTerm = this.term;

                $.ajax({
                    url: '/api/UserRolesAPI/@Model.AccountId/SearchContacts',
                    dataType: "json",
                    data: {
                        lastName: searchTerm,
                        firstName: '',
                        page: 1
                    },
                    success: function (data) {

                        var results = $.map(data, function (item) {
                            var fullName = item.LastName + ", " + item.FirstName;
                            if (item.MiddleName)
                                fullName = fullName + ' ' + item.MiddleName;

                            return {
                                label:  fullName,
                                Id: item.Id,
                                PhotoURL: item.PhotoURL,
                                FirstName: item.FirstName,
                                LastName: item.LastName
                            }
                        });
                        response(results);
                    },
                });
            },
            minLength: 1,
            select: function (e, ui) {
                if (this.id == "ownerPlayerSelect")
                    userRolesData.setSelectedAccountOwner(ui.item);
                else
                    userRolesData.setSelectedUser(ui.item);
            }
        });
        
        $.ui.autocomplete.prototype._renderItem = function (ul, item) {
            var li = $("<li>");
            li.data("item.autocomplete", item);
            var photoURL = item.PhotoURL ? item.PhotoURL : '/Images/defaultperson.png';
            li.append("<a><img width='40px' height='30px' style='vertical-align: middle' src='" + photoURL + "' /><span style='font-weight: 600'>" + item.label + "</span></a>");
            li.appendTo(ul);

            return li;
        };
    });

</script>    
}