@model SportsManager.ViewModels.DomainsViewModel

@{
    ViewBag.Title = @Model.AccountName + " Domains";
}

@section head
{
@Styles.Render("~/Content/themes/base/css")
}


<div class="jumbotron">
    <h1>@ViewBag.Title.</h1>
    <p class="help-block">Map domains you own to your league website.</p>
</div> <!-- content-wrapper -->

<form class="form-inline" role="form" style="margin-top:20px">
    <small>add domain</small><br />
    <div class="form-group">
        <label for="urlField" class="sr-only">Domain Name</label>
        <input id="urlField" style="width:300px" type="url" class="form-control" placeholder="ex: http://www.yourdomain.com" pattern=".{1,}" title="Must supply a url" />
        <button type="button" class="btn btn-primary" onclick="addUrl()"><span class="glyphicon glyphicon-plus"></span></button>
    </div>
</form>

<hr />
<div id="urlList">
@if (Model.AccountUrls.Any())
{
    foreach (var mappedUrl in Model.AccountUrls)
    {
        <div style="margin-bottom:10px" id='@mappedUrl.Replace("http://", String.Empty).Replace(".", String.Empty)' class="mappedUrl">
            <button type="button" class="btn btn-default" onclick="editUrl('{{:Url}}')"><span class="glyphicon glyphicon-edit"></span></button>
            <button type="button" class="btn btn-danger" onclick="deleteUrl('@mappedUrl')"><span class="glyphicon glyphicon-remove"></span></button>
            <h3 style="display: inline">@mappedUrl</h3>
        </div>
    }
}
</div>

<h3 id="noDomainsText" style="display:none">No domains mapped to this account.</h3>

@section scripts
{
@Scripts.Render("~/bundles/jsrender")

<script id="mappedUrlTemplate" type="text/x-jsrender">
<div id='{{:Id}}' class='mappedUrl'>
    <button type="button" class="btn btn-default" onclick="editUrl('{{:Url}}')">Edit</button>
    <button type="button" class="btn btn-danger" onclick="deleteUrl('{{:Url}}')">Delete</button>
    <h3 style="display: inline">{{:Url}}</h3>
</div>
</script>

<script type="text/javascript">
    $(document).ready(function () {
        if ($('.mappedUrl').length == 0) {
            $('#noDomainsText').show();
        }
    });

    function addUrl() {
        var accountUri = $('#urlField').val();
        $.ajax({
            type: "POST",
            url: '/api/AccountAPI/@Model.AccountId/AccountUrl',
            data: {
                Uri: accountUri
            },
            success: function (accountUrl) {
                window.location.hash = 'update';
                $('#noDomainsText').hide();
                $('#urlField').val('');
                var id = generateIdFromUrl(accountUrl);
                $('#urlList').append($('#mappedUrlTemplate').render({ Id: id, Url: accountUrl }));

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.responseText);
            }
        });
    }

    function editUrl(url) {
        alert('todo');
    }

    function deleteUrl(url) {
        $.ajax({
            type: "DELETE",
            url: '/api/AccountAPI/@Model.AccountId/AccountUrl',
            data: {
                Uri: url
            },
            success: function (accountName) {
                window.location.hash = 'update';
                var urlId = generateIdFromUrl(url);
                $('#' + urlId).remove();
                if ($('.mappedUrl').length == 0) {
                    $('#noDomainsText').show();
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.responseText);
            }
        });
    }

    function generateIdFromUrl(url) {
        return url.replace('http://', '').replace(/\./g, '');
    }
</script>
}
