@model SportsManager.ViewModels.DomainsViewModel

@{
    ViewBag.Title = @Model.AccountName + " Domains";
}

@section head
{
@Styles.Render("~/Content/themes/base/css")

    <style>
        .mappedUrl
        {
            margin-bottom: 10px;
        }
    </style>
}


<div class="jumbotron">
    @Header.DisplayHeader("Domains", Model.AccountName, Model.AccountLogoUrl)
    <p class="help-block">Map domains you own to your league website.</p>
</div> <!-- content-wrapper -->

<form class="form-inline" role="form" style="margin-top:20px">
    <small>add domain</small><br />
    <div class="form-group">
        <label for="urlField" class="sr-only">Domain Name</label>
        <div class="input-group">
            <input id="urlField" style="width:300px" type="url" class="form-control" placeholder="ex: http://www.yourdomain.com" pattern=".{1,}" title="Must supply a url" />
            <span class="input-group-btn">
                <button type="button" class="btn btn-primary" onclick="addUrl()"><span class="glyphicon glyphicon-plus"></span></button>
            </span>
        </div>
    </div>
</form>

<hr />
<div id="urlList">
@if (Model.AccountUrls.Any())
{
    foreach (var mappedUrl in Model.AccountUrls)
    {
        string urlId = @mappedUrl.Replace("http://", String.Empty).Replace(".", String.Empty);

        <div id="@urlId">
            <div id='view_@urlId' class="mappedUrl">
                <button type="button" class="btn btn-default" onclick="startEditUrl('@mappedUrl')"><span class="glyphicon glyphicon-edit"></span></button>
                <button type="button" class="btn btn-danger" onclick="deleteUrl('@mappedUrl')"><span class="glyphicon glyphicon-remove"></span></button>
                <h3 id="urlText_@urlId" style="display: inline">@mappedUrl</h3>
            </div>
            <form id='edit_@urlId' class="form-inline mappedUrl" style="display:none" role="form">
                <div class="form-group">
                    <label for="url_@urlId" class="sr-only">Url</label>
                    <div class="input-group">
                        <input type="url" id="url_@urlId" style="width:300px" class="form-control" placeholder="ex: http://www.yourdomain.com" />
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-success" onclick="saveEditMode('@mappedUrl')"><span class="glyphicon glyphicon-ok"></span></button>
                            <button type="button" class="btn btn-danger" onclick="cancelEditMode('@mappedUrl')"><span class="glyphicon glyphicon-remove"></span></button>
                        </span>
                    </div>
                </div>
            </form>
        </div>
    }
}
</div>

<h3 id="noDomainsText" class="alert alert-info" style="display:none">No domains mapped to this account.</h3>

@section scripts
{
@Scripts.Render("~/bundles/jsrender")

<script id="mappedUrlTemplate" type="text/x-jsrender">
<div id="{{:Id}}">
    <div id='view_{{:Id}}' class='mappedUrl'>
        <button type="button" class="btn btn-default" onclick="startEditUrl('{{:Url}}')"><span class="glyphicon glyphicon-edit"></span></button>
        <button type="button" class="btn btn-danger" onclick="deleteUrl('{{:Url}}')"><span class="glyphicon glyphicon-remove"></span></button>
        <h3 id='urlText_{{:Id}}' style="display: inline">{{:Url}}</h3>
    </div>
    <form id='edit_{{:Id}}' class="form-inline mappedUrl" style="display:none" role="form">
        <div class="form-group">
            <label for="url_{{:Id}}" class="sr-only">Url</label>
            <input type="url" id="url_{{:Id}}" style="width:300px" class="form-control" placeholder="ex: http://www.yourdomain.com" />
            <button type="button" class="btn btn-success" onclick="saveEditMode('{{:Url}}')"><span class="glyphicon glyphicon-ok"></span></button>
            <button type="button" class="btn btn-danger" onclick="cancelEditMode('{{:Url}}')"><span class="glyphicon glyphicon-remove"></span></button>
        </div>
    </form>
</div>
</script>

<script type="text/javascript">
    $(document).ready(function () {
        if ($('.mappedUrl').length == 0) {
            $('#noDomainsText').show();
        }
    });

    function addUrl() {
        var accountUri = $('#urlField').val();
        $.ajax({
            type: "POST",
            url: window.config.rootUri + '/api/AccountAPI/@Model.AccountId/AccountUrl',
            data: {
                Uri: accountUri
            },
            success: function (accountUrl) {
                window.location.hash = 'update';
                $('#noDomainsText').hide();
                $('#urlField').val('');
                var id = generateIdFromUrl(accountUrl);
                $('#urlList').append($('#mappedUrlTemplate').render({ Id: id, Url: accountUrl }));

            }
        });
    }

    function updateUrl(accountUri) {
        $.ajax({
            type: "POST",
            url: window.config.rootUri + '/api/AccountAPI/@Model.AccountId/AccountUrl',
            data: {
                Uri: accountUri
            },
            success: function (accountUrl) {
                window.location.hash = 'update';
                $('#noDomainsText').hide();
                var id = generateIdFromUrl(accountUrl);
                $('#urlList').append($('#mappedUrlTemplate').render({ Id: id, Url: accountUrl }));

            }
        });
    }
    var currentEditUrl = "";
    
    function startEditUrl(url) {
        if (currentEditUrl) {
            cancelEditMode(currentEditUrl);
        }
        var urlId = generateIdFromUrl(url);
        $("#view_" + urlId).hide();

        currentEditUrl = url;

        $("#url_" + urlId).val(url);
        $("#edit_" + urlId).show();

    }

    function cancelEditMode(url) {
        var urlId = generateIdFromUrl(url);

        $("#edit_" + urlId).hide();
        $("#view_" + urlId).show();

        currentEditUrl = "";
    }

    function saveEditMode(url) {
        var urlId = generateIdFromUrl(url);

        deleteUrl(currentEditUrl, function (accountName) {
            // get entered value, will delete control in next step.
            var newValue = $("#url_" + urlId).val();

            // delete the old control.
            $('#' + urlId).remove();

            // add it back..
            updateUrl(newValue);
        });

        currentEditUrl = "";
    }

    function deleteUrl(url, successCallback) {
        $.ajax({
            type: "DELETE",
            url: window.config.rootUri + '/api/AccountAPI/@Model.AccountId/AccountUrl',
            data: {
                Uri: url
            },
            success: function (accountName) {
                if (successCallback) {
                    successCallback(accountName);
                }
                else {
                    window.location.hash = 'update';
                    var urlId = generateIdFromUrl(url);
                    $('#' + urlId).remove();
                    if ($('.mappedUrl').length == 0) {
                        $('#noDomainsText').show();
                    }
                }
            }
        });
    }

    function generateIdFromUrl(url) {
        return url.replace('http://', '').replace(/\./g, '');
    }
</script>
}
