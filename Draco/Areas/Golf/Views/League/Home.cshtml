@model SportsManager.Golf.ViewModels.LeagueHomeViewModel
@using SportsManager.Models.Helpers;
@using MvcContrib.UI.Grid;

@{
    ViewBag.Title = Model.Season.Name + " " + Model.Account.AccountName;
}

<h1>@ViewBag.Title</h1>

@if (Model.Season == null)
{
    if (Model.IsAdmin())
    { 
        <h4>No Current Season. Click @Html.ActionLink("here", "Index", "Season", new { area = "", accountId = Model.Account.Id }, null) to setup or create a Season.</h4>
    }

    return;
}

<div id="leagueschedule">

@{
    var flights = Model.RetrieveFlights();
}
@foreach (var flight in flights)
{
    ViewBag.FlightId = flight.FlightId;

    if (flights.Count() > 1)
    { 
        <h4>@flight.Name</h4> 
    }
    
    <table><tr>

    <td valign="top">
    <h3>Most Recent Match Results</h3>
    @{
    var recentMatch = Model.GetMostRecentlyCompletedMatch(flight.FlightId);
    var recentMatchDetails = Model.CompletedMatches;
     }

    @if (recentMatch == null)
    {
        <p>No completed matches found.</p>
    }
    else
    {
        <h4>Matches</h4>
        
        Html.RenderPartial("_ShowMatches", recentMatchDetails);

        if (recentMatch.PlayoffResults.Any())
        {
            <h4>Playoff Results</h4>
            <table>
            @foreach (var playoffResult in recentMatch.PlayoffResults)
            {
                <tr>
                @if (playoffResult.IsTeam1Winner)
                { 
                    <td>
                    <b>@playoffResult.Team1 (@playoffResult.MatchResults.Team1MatchPoints)</b> def @playoffResult.Team2
                    </td>
                }
                else
                {
                    <td>
                    <b>@playoffResult.Team2 (@playoffResult.MatchResults.Team2MatchPoints)</b> def @playoffResult.Team1
                    </td>
                }
                </tr>
            }
            </table>
        }

        
        if (recentMatch.TeamScores.Any())
        { 
            <h4>Results</h4>
        }

        Html.RenderPartial("_LeagueResults", recentMatch);
    }        
    
    </td>

    <td valign="top">
    <h3>Standings</h3>
    @{
    Html.RenderPartial("_LeagueStandings", Model.LeagueStandings(flight.FlightId));
    }


    <h3>Upcoming Matches</h3>
    @{
    var nextMatch = Model.GetNextMatch(flight.FlightId);
    }
   
    @if (nextMatch == null)
    {
        <p>No upcoming matches found.</p>
    }
    else
    {
        Html.RenderPartial("_ShowMatches", nextMatch);
    }

    <br /><br />
    @Html.ActionLink("Complete Schedule", "CompleteSchedule", "Schedule", new { accountId = Model.AccountId, seasonId = Model.Season.Id, id = flight.FlightId }, null)

    
    <h3>Season Leaders</h3>
    <h4>Individual Low Scores</h4>
        <table>
        <tr><th>Actual</th><th>Times Won</th></tr>
        @foreach (var lowScore in Model.LowActualScoresLeaders(flight.FlightId))
        {
            <tr><td>@lowScore.PlayerName</td><td style="text-align:center">@lowScore.Count</td></tr>
        }

        <tr><th>Net</th><th>Times Won</th></tr>
        @foreach (var lowScore in Model.LowNetScoresLeaders(flight.FlightId))
        {
            <tr><td>@lowScore.PlayerName</td><td style="text-align:center">@lowScore.Count</td></tr>
        }

        </table>

        <br />  
    <h4>Skin Winners</h4>  

        @Html.Grid(Model.PlayerSkinsTotals(flight.FlightId)).Columns(extraCols =>
   {
       extraCols.For(x => x.PlayerName).Named("");
       extraCols.For(x => x.Count).Named("Times Won").Attributes(@style => "text-align:center");
   }).Empty("No skins won.")

    </td>
    <td valign="top">
    <h3>Handicaps</h3>
    @Html.Grid(Model.GetPlayerHandicaps(flight.FlightId)).Columns(column =>
{
    column.For(x => Html.ActionLink(x.PlayerName, "Index", "Player", new { accountId = Model.AccountId, seasonId = Model.Season.Id, id = x.PlayerId }, null)).Named("Player");
    column.For(x => x.HandicapIndex).Attributes(style => "text-align:center");
})

    <h4>Subs</h4>
    @Html.Grid(Model.GetSubPlayerHandicaps(flight.FlightId)).Columns(column =>
{
    column.For(x => Html.ActionLink(x.PlayerName, "Index", "Player", new { accountId = Model.AccountId, seasonId = Model.Season.Id, id = x.PlayerId }, null)).Named("Player");
    column.For(x => x.HandicapIndex).Attributes(style => "text-align:center");
})
    </td>
    </tr></table>    
}
</div>

@section Scripts {

<script type="text/javascript">

	$(document).ready(function () {
	});

</script>
}