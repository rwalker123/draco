@model SportsManager.Baseball.ViewModels.StandingsViewModel

<div class="container">
    @foreach (var league in Model.Leagues)
    {
        int i = 0;
        bool newRow = false;
        
        <h2>@league.League.Name</h2>

        foreach (var d in Model.GetDivisions(league.Id))
        {
            newRow = (i++ % 2) == 0;
            
            if (newRow)
            {
                @Html.Raw("<div class='row'>");
            }
            <div class="col-md-6">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>@d.DivisionDef.Name</th>
                                <th>&nbsp;W&nbsp;</th>
                                <th>&nbsp;L&nbsp;</th>
                                <th>&nbsp;T&nbsp;</th>
                                <th>&nbsp;Pct&nbsp;</th>
                                <th>&nbsp;GB&nbsp;</th>
                                <th>Div</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var t in Model.GetDivisionStandings(d.Id))
                            {

                                Model.ProcessTeamStanding(t);

                                <tr>
                                    <td style="overflow: hidden; white-space: nowrap;">
                                        @Html.ActionLink(@t.TeamName, "Index", "Team", new { area = "baseball", accountId = Model.AccountId, id = t.TeamId }, null)
                                        &nbsp;&nbsp;
                                    </td>
                                    <td>&nbsp;@t.Wins&nbsp;</td>
                                    <td>&nbsp;@t.Losses&nbsp;</td>
                                    <td>&nbsp;@t.Ties&nbsp;</td>
                                    <td>&nbsp;@t.WinningPct.ToString("F3")&nbsp;</td>
                                    <td>&nbsp;@Model.GamesBack.ToString("F1")&nbsp;</td>
                                    <td>&nbsp;@t.DivisionWins-@t.DivisionLosses-@t.DivisionTies&nbsp;</td>
                                </tr>

                            }

                        </tbody>
                    </table>
                </div>
            </div>
        
            if (!newRow)
            {
                @Html.Raw("</div>");
            }
        }

        if (newRow)
        {
            @Html.Raw("</div>");
        }
    }

</div>