@using System.Web.Optimization
@model SportsManager.Baseball.ViewModels.LeagueHomeViewModel

@{
    ViewBag.Title = @Model.AccountName + " Home";
}


@section facebooklike
{
    @if (Model.ShowFacebookLike)
    { 
        <!-- facebook like control -->
        <div id="fb-root"></div>
        <script>
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = '//connect.facebook.net/en_US/all.js#xfbml=1&appId=@System.Configuration.ConfigurationManager.AppSettings["FacebookAppId"]';
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));</script>
    }
}

@section head {
    <meta name="application-name" content="@Model.AccountName" />
    <meta name="msapplication-TileColor" content="#58595B" />
    @if (!String.IsNullOrEmpty(@Model.AccountLogoUrl))
    {
        <meta name="msapplication-TileImage" content="@Url.Content(@Model.AccountLogoUrl)" />
    }

    <link rel="stylesheet" href='@Url.Content("~/Areas/Baseball/Content/LeagueHome.css")' />
}

<div class="jumbotron">
    <div id="accountName">
        @if (Model.IsAdmin)
        {
            <button type="button" class="btn btn-default" style="float:right" data-bind="click: editAccount, visible: viewMode"><span class="glyphicon glyphicon-edit"></span></button>

            <form class="form-horizontal" style="display:none" role="form" data-bind="with: editAccountInfo, visible: !viewMode()">
                <div class="form-group">
                    <label for="_accountName" class="col-sm-2 control-label">Account name</label>
                    <div class="col-sm-10">
                        <input id="_accountName" type="text" class="form-control" style="width:200px" data-bind="value: AccountName" />
                    </div>
                </div>
                <div class="form-group">
                    <label for="_yearEst" class="col-sm-2 control-label">Year established</label>
                    <div class="col-sm-10">
                        <select id="_yearEst" class="selectpicker" data-bind="value: FirstYear, options: $root.availableYears"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label for="_twitterAcct" class="col-sm-2 control-label">Twitter account</label>
                    <div class="col-sm-10">
                        <input class="form-control" style="width: 200px" id='twitterId' type="text" placeholder="enter twitter account" data-bind="value: TwitterAccountName" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-2">
                    </div>
                    <div class="col-sm-10">
                        <button type="button" class="btn btn-primary" data-bind="click: $root.saveAccount"><span class="glyphicon glyphicon-ok"></span></button>
                        <button type="button" class="btn btn-danger" data-bind="click: $root.cancelEdit"><span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>
            </form>            
        }

        <div data-bind="with: accountViewModel, visible: viewMode">
            @if (String.IsNullOrEmpty(@Model.AccountLogoUrl))
            {
                <h1 style="margin-bottom:0px;" data-bind="html: AccountName"></h1>
            }

            @if (!String.IsNullOrEmpty(@Model.AccountLogoUrl) || Model.IsAdmin)
            {
                <img class="img-rounded img-responsive" onload="this.style.display = 'block';" onerror="this.style.display = 'none';" data-bind="attr: { src: LargeLogoURL }" />
                if (Model.IsAdmin)
                { 
                    <span data-bind="imageUploader: accountLogoUploaderUrl" class="btn btn-default fileinput-button" title="upload league logo">
                        <i class="glyphicon glyphicon-upload"></i>
                        <input class="form-control" type="file" data-maxfilesize="1">
                    </span>
                }
            }

            @if (Model.ShowAffiliation && Model.Account.AffiliationId > 1)
            {
                <div class="small">
                    Proud member of the
                    @if (String.IsNullOrEmpty(Model.Affiliation.URL))
                    {
                        @Html.ActionLink(Model.Affiliation.Name, "Home", "Affiliations", new { area = "baseball", accountId = Model.Affiliation.Id }, new { @class = "btn btn-success" })
                    }
                    else
                    {
                        <a class="btn btn-success" href="@Model.Affiliation.URL">@Model.Affiliation.Name</a>
                    }
                </div>
            }


        @if (Model.IsAdmin)
        {
            @*<span class="btn btn-default fileinput-button" title="upload league logo">
                <i class="glyphicon glyphicon-upload"></i>
                <input id="largelogoupload" class="form-control" type="file" data-maxfilesize="1">
            </span>*@
            }

            <h2>
            @if (Model.CurrentSeasonId != 0)
            {
                <text>@Model.SeasonName Season</text>
            }
            else
            {
                <text>Home</text>
            } 
            <small style="color: white" data-bind="visible: hasYear">est. <span data-bind="text: FirstYear"></span></small>
            </h2>

            @if (Model.CurrentSeasonId == 0 && Model.IsAdmin)
            {
                <p class="help-block">You currently do not have any seasons setup. Click <b>@Html.ActionLink("here", "Index", "Season", new { area = "", accountId = Model.AccountId }, new { @class = "btn btn-primary" })</b> to set or create a new season.</p>
            }
        </div>

        @if (ViewData["TwitterAccountName"] != null)
        {
            <div class="row">
                <div style="display:inline-block" id="twitterDisplay">
                    <a href='https://twitter.com/@ViewData["TwitterAccountName"]' class="twitter-follow-button" data-size="large" data-show-count="true" data-lang="en">Follow @@@ViewData["TwitterAccountName"]</a>
                    <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
                </div>
            </div>
        }

        @if (Model.ShowFacebookLike && ViewData["AccountUrl"] != null)
        {
            <div class="row">
                <div class="fb-like" data-href='@ViewData["AccountUrl"]' data-send="false" data-layout="button_count" data-width="100" data-show-faces="true" data-font="segoe ui"></div>
            </div>
        }

    </div>
</div>

<div class="container-fluid">

    @if (!Model.RegisteredForAccount)
    {
        <div class="row center-block text-center">
            <div class="col-sm-12">
                <div class="alert alert-danger">
                    <b>You are logged in but not registered with the @Model.AccountName, click @Html.ActionLink("Register", "Register", "Account", new { area = "", accountId = ViewData["AccountId"] }, htmlAttributes: new { id = "registerLink" }) if you are a member of this league.</b>
                </div>
            </div>
        </div>
    }

    @if (Model.ContactId == 0 && Model.ShowFAQMessage)
    { 
    <div class="row center-block text-center">
        <div class="col-sm-12">
            <div class="alert alert-success">
                <b>Interested in learning about the @Model.AccountName? You can start by visiting the </b><a href="@Url.Action("Index", "LeagueFAQ", new { area = "", accountId = Model.AccountId }, null)" class="btn btn-success">FAQ</a> 
            </div>
        </div>
    </div>
    }
    
    <div class="row">

        <div class="col-md-8"> <!-- column 1-->
            @if (Model.ShowSponsorSpotlight)
            {
                <div class="row">
                    <div class="col-sm-12">
                        @{Html.RenderPartial("SponsorSpotlightView", new SportsManager.ViewModels.SponsorSpotlightViewModel(Model.Controller, Model.AccountId));}
                    </div>
                </div>
            }
            @if (Model.ShowWorkouts)
            {
                <div class="row">
                    <div class="col-md-12">
                        @{Html.RenderPartial("WorkoutsView", new SportsManager.Baseball.ViewModels.WorkoutsViewModel(Model.Controller, Model.AccountId));}
                    </div>
                </div>
            }

            @if (Model.VideosEnabled && Model.ShowVideos)
            {
                <div class="row">
                    <div class="col-md-12">
                        @{Html.RenderPartial("VideosView", new SportsManager.ViewModels.VideoViewModel(Model.Controller, Model.AccountId));}
                    </div>
                </div>
            }

            @if (Model.ContactId == 0 && Model.ShowWelcomeMessages)
            {
                <div class="row">
                    <div class="col-md-12">
                        @{Html.RenderPartial("WelcomeMessageView", new SportsManager.ViewModels.WelcomeMessageViewModel(Model.Controller, Model.AccountId));}
                    </div>
                </div>
            }

            @if (Model.ShowPlayerInterview)
            {
                <div class="row">
                    <div class="col-sm-12">
                        @{Html.RenderPartial("PlayerSurveyView", new SportsManager.ViewModels.PlayerSurveyViewModel(Model.Controller, Model.AccountId));}
                    </div>
                </div>
            }

        @if (Model.ShowAnnouncements)
        { 
            <div class="row">
                <div class="col-md-12">
                    @{Html.RenderPartial("AnnouncementView", new SportsManager.ViewModels.AnnouncementsViewModel(Model.Controller, Model.AccountId));}
                </div>
            </div>
        }


        @if (Model.ShowPhotoGallery)
        {
            <div class="row">
                <div class="col-md-12">
                    @{Html.RenderPartial("PhotoGallery", new SportsManager.ViewModels.PhotoGalleryViewModel(Model.Controller, Model.AccountId));}
                </div>
            </div>
        }
        
        @if (Model.ContactId > 0 && Model.ShowWelcomeMessages)
        { 
            <div class="row">
                <div class="col-md-12">
                    @{Html.RenderPartial("WelcomeMessageView", new SportsManager.ViewModels.WelcomeMessageViewModel(Model.Controller, Model.AccountId));}
                </div>
            </div>
        }
        
        @if (Model.ShowHandouts)
        { 
            <div class="row">
                <div class="col-md-12">
                    @{Html.RenderPartial("HandoutsView", new SportsManager.ViewModels.HandoutsViewModel(Model.Controller, Model.AccountId));}
                </div>
            </div>
        }
        

        @if (Model.TwitterEnabled)
        {
            <div class="col-md-12" id="twitterFeed" data-bind="if: displayTwitterFeed">
                @{Html.RenderPartial("TwitterView", new SportsManager.ViewModels.AccountViewModel(Model.Controller, Model.AccountId));}
            </div>
        }

        @if (Model.FacebookEnabled)
        {
            <div class="col-md-12" id="facebookFeed" data-bind="if: isVisible">
                @{Html.RenderPartial("FacebookView", new SportsManager.ViewModels.AccountViewModel(Model.Controller, Model.AccountId));}
            </div>
        }

    </div>

    <div class="col-md-4"> <!-- second column -->

    @if (Model.UserTeams != null && Model.UserTeams.Any())
    {
        <div class="col-md-12">
            @{Html.RenderPartial("CurrentUserTeamsView", Model.UserTeams);}
        </div>
    }

    @if (Model.ShowUserPoll)
    {
        <div class="col-md-12">
            @{Html.RenderPartial("UserPollView", new SportsManager.ViewModels.UserPollViewModel(Model.Controller, Model.AccountId));}
        </div>
    }

    @if (Model.ShowScoreboard)
    { 
        <div class="col-md-12">
            @{Html.RenderPartial("ScoreboardView", new SportsManager.Baseball.ViewModels.ScoreboardViewModel(Model.Controller, Model.AccountId));}
        </div>
    }

    @if (Model.ShowLeagueLeaders)
    {
        <div class="col-md-12">
            @{Html.RenderPartial("Leaders", new SportsManager.Baseball.ViewModels.LeadersViewModel(Model.Controller, Model.AccountId));}
        </div>
    }

    @if (Model.ShowHOF)
    {
        <div class="col-md-12">
            @{Html.RenderPartial("HOF", new SportsManager.ViewModels.HOFOfDayViewModel(Model.Controller, Model.AccountId));}
        </div>
    }
    @if (Model.ShowBirthdays)
    {     
        <div class="col-md-12">
            @{Html.RenderPartial("Birthdays", new SportsManager.ViewModels.BirthdayViewModel(Model.Controller, Model.AccountId));}
        </div>
    }

    @if (Model.ShowSponsors)
    {
        <div class="col-md-12">
            @{Html.RenderPartial("Sponsors", new SportsManager.ViewModels.SponsorsViewModel(Model.Controller, Model.AccountId));}
        </div>
    }
    </div> <!-- end second column -->

    </div> <!-- end main single row -->

</div>

@section scripts {

    @Scripts.Render("~/bundles/knockout")

@* tinymce doesn't work with bundles because of the plug directory.*@
@if (BundleTable.EnableOptimizations)
{
    <script type="text/javascript" src="~/scripts/tinymce/tinymce.min.js"></script>
}
else
{
    <script type="text/javascript" src="~/scripts/tinymce/tinymce.js"></script>
}
    @Scripts.Render("~/bundles/bootstrap-wysiwyg")

@if (Model.ShowUserPoll)
{
    <script type="text/javascript" src="~/Scripts/userpoll.js"></script>
}

@if (Model.ShowPlayerInterview)
{
    <script type="text/javascript" src="~/Scripts/playersurveyspotlight.js"></script>
}

@if (Model.ShowSponsorSpotlight)
{
    <script type="text/javascript" src="~/Scripts/sponsorspotlight.js"></script>
}

@if (Model.ShowHOF)
{
    <script type="text/javascript" src="~/Scripts/hofspotlight.js"></script>
}


@if (Model.ShowWelcomeMessages)
{ 
    <script type="text/javascript" src="~/Scripts/welcome.js"></script>
}

@if (Model.ShowAnnouncements)
{ 
    <script type="text/javascript" src="~/Scripts/announcement.js"></script>
}

@if (Model.ShowScoreboard)
{
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/entergameresults.js"></script>
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/scoreboard.js"></script>
}

<script type="text/javascript" src="~/Scripts/jquery.maskedinput-1.3.1.min.js"></script>

@if (Model.ShowHandouts)
{
    <script type="text/javascript" src="~/Scripts/handouts.js"></script>
}

@if (Model.ShowWorkouts)
{ 
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/workouts.js"></script>
}

@if (Model.ShowPhotoGallery)
{
    <script type="text/javascript" src="~/Scripts/photogallery.js"></script>
}
    
@if (Model.ShowLeagueLeaders)
{
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/leaders.js"></script>
}

@if (Model.ShowSponsors)
{
    <script type="text/javascript" src="~/Scripts/sponsors.js"></script>
}

@if (Model.VideosEnabled && Model.ShowVideos)
{
    <script type="text/javascript" src="~/Scripts/videos.js"></script>
}

@if (Model.TwitterEnabled)
{
    <script type="text/javascript" src="~/Scripts/twitter.js"></script>
}

@if (Model.FacebookEnabled)
{
    <script type="text/javascript" src="~/Scripts/facebook.js"></script>
}

<!-- main javascript -->
<script type="text/javascript">

    $(document).ready(function () {
        // Ajax state is not remembered when clicking "back" button. Whenever a change is made with Ajax
        // on this page, hash is set to update. If back is pressed in that case, then reload the page.
        if (window.location.hash == '#update') {
            window.location.hash = '';
            window.location.reload();
        }

        initKOHelpers();

        InitViewModels(@Model.AccountId, '@Model.AccountName', @Model.FirstYear, '@ViewData["TwitterAccountName"]', '@Model.AccountLogoUrl');

        @if (Model.ShowPlayerInterview)
        {
            <text>
            InitPlayerSurveySpotlightViewModel(@Model.AccountId);
            </text>
        }

        @if (Model.ShowSponsorSpotlight)
        {
            <text>
            InitSponsorSpotlightViewModel(@Model.AccountId);
            </text>
        }

        @if (Model.ShowHOF)
        {
            <text>
            InitHOFSpotlightViewModel(@Model.AccountId);
            </text>
        }

        @if (Model.ShowPhotoGallery)
        {
            <text>
            InitPhotoGalleryViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
            </text>
        }

        @if (Model.ShowWelcomeMessages)
        {
            <text>
        initWelcomesViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        </text>
        }

        @if (Model.ShowAnnouncements)
        {
            <text>
        initAnnouncementsViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        </text>
        }

        @if (Model.ShowUserPoll)
        {
            <text>
        initUserPollViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower(), @Model.ContactId);
        </text>
        }


        @if (Model.ShowScoreboard)
        {
            <text>
        initScoreboardViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        </text>
        }

        @if (Model.ShowLeagueLeaders)
        {
            <text>
        initLeadersViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        </text>
        }

        @if (Model.ShowSponsors)
        {
            <text>
        initSponsorsViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        </text>
        }


        @if (Model.ShowHandouts)
        {
            <text>
        var handoutData = new HandoutViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        ko.applyBindings(handoutData, document.getElementById("handouts"));
        </text>
        }

        @if (Model.ShowWorkouts)
        {
            <text>
        var workoutsData = new WorkoutsViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
        ko.applyBindings(workoutsData, document.getElementById("workouts"));
        </text>
        }

        @if (Model.VideosEnabled && Model.ShowVideos)
        {
            <text>
            initVideosViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower(), '@Model.YouTubeUserId', '@Model.DefaultVideo', @Model.AutoPlayVideo.ToString().ToLower());
            </text>
        }

        @if (Model.TwitterEnabled)
        {
            <text>
            initTwitterViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
            </text>
        }

        @if (Model.FacebookEnabled)
        {
            <text>
            initFacebookViewModel(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
            </text>
        }


        $("#_yearEst").selectpicker();
    });
</script>

    <!-- disqus

    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        -->
    <!-- drag/drop support for logo -->
    @Scripts.Render("~/bundles/jquery-file-upload")
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/leagueHome.js"></script>
}

