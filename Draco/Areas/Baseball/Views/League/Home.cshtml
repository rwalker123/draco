@using System.Web.Optimization
@model SportsManager.Baseball.ViewModels.LeagueHomeViewModel

@{
    ViewBag.Title = @Model.AccountName + " Home";
}


@section facebooklike
{
    <!-- facebook like control -->
<div id="fb-root"></div>
<script>
(function (d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = '//connect.facebook.net/en_US/all.js#xfbml=1&appId=@System.Configuration.ConfigurationManager.AppSettings["FacebookAppId"]';
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<!-- end facebook like control -->
}

@section head {
    <meta name="application-name" content="@Model.AccountName" />
    <meta name="msapplication-TileColor" content="#58595B" />
    @if (!String.IsNullOrEmpty(@Model.AccountLogoUrl))
    {
        <meta name="msapplication-TileImage" content="@Url.Content(@Model.AccountLogoUrl)" />
    }

    <link rel="stylesheet" href="/Areas/Baseball/Content/LeagueHome.css" />
}

@section scripts {

    <script type="text/javascript" src="~/Scripts/tiny_mce/jquery.tinymce.js"></script>
    <script type="text/javascript" src="~/Scripts/welcome.js"></script>
    <script type="text/javascript" src="~/Scripts/announcement.js"></script>
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/scoreboard.js"></script>

    @Scripts.Render("~/bundles/knockout")

    <!-- main javascript -->
    <script type="text/javascript">

        function ToggleElement(hideElement, showElement) {
            var animTime = 750;

            $(hideElement).hide('fold', animTime);
            $(showElement).show('fold', animTime);
        }

        $(document).ready(function () {
            // Ajax state is not remembered when clicking "back" button. Whenever a change is made with Ajax
            // on this page, hash is set to update. If back is pressed in that case, then reload the page.
            if (window.location.hash == '#update') {
                window.location.hash = '';
                window.location.reload();
            }

            initKOHelpers();

            InitViewModels(@Model.AccountId, '@Model.AccountName', @Model.FirstYear, '@ViewData["TwitterAccountName"]', '@ViewData["FacebookFanPage"]', @Model.ShowPhotoGallery.ToString().ToLower(), @Model.IsAdmin.ToString().ToLower() );

            welcomeData = new WelcomeClass(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
            announcementData = new AnnouncementClass(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());
            scoreboardData = new ScoreboardClass(@Model.AccountId, @Model.IsAdmin.ToString().ToLower());

            $('textarea.tinymce').tinymce({
                // Location of TinyMCE script
                script_url : '/scripts/tiny_mce/tiny_mce.js',

                // General options
                theme : "advanced",
                plugins : "pagebreak,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",

                // Theme options
                theme_advanced_buttons1 : "bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
                theme_advanced_buttons2 : "cut,copy,paste,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,|,forecolor,backcolor",
                theme_advanced_buttons3 : "tablecontrols,|,hr,iespell",
                theme_advanced_toolbar_location : "top",
                theme_advanced_toolbar_align : "left",
                theme_advanced_statusbar_location : "bottom",
                theme_advanced_resizing : false,

                // Example content CSS (should be your site CSS)
                //content_css : "~/Content/site.css",

                // Drop lists for link/image/media/template dialogs
                template_external_list_url : "lists/template_list.js",
                external_link_list_url : "lists/link_list.js",
                external_image_list_url : "lists/image_list.js",
                media_external_list_url : "lists/media_list.js",

                // Replace values for the template plugin
                template_replace_values : {
                    username : "Some User",
                    staffid : "991234"
                }

            });

            // from welcome message. If no welcome message, ShowFirstMenu doesn't exist.
            welcomeData.ShowFirstMenu();
            announcementData.AdjustNewsMenuHeaders();

        });
    </script>

    @if (Model.VideosEnabled && Model.ShowVideos)
    {
        <!-- video playing -->
        <script type="text/javascript">

            $(function() {
                // 2. This code loads the IFrame Player API code asynchronously.
                var tag = document.createElement('script');

                // This is a protocol-relative URL as described here:
                //     http://paulirish.com/2010/the-protocol-relative-url/
                // If you're testing a local page accessed via a file:/// URL, please set tag.src to
                //     "https://www.youtube.com/iframe_api" instead.
                tag.src = "//www.youtube.com/iframe_api";
                var firstScriptTag = document.getElementsByTagName('script')[0];
                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
            });


            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            function loadVideo(playerUrl, autoPlay) {
                player.cueVideoByUrl(playerUrl);
                if (autoPlay)
                    player.playVideo();
            }

            function onYouTubeIframeAPIReady() {

                @if (Model.IsAdmin) {
            <text>
                $(function () {
                    var ytViewModel = new youTubeViewModel(@Model.AccountId, '@Model.YouTubeUserId');
                    ko.applyBindings(ytViewModel, document.getElementById("videos"));
                });
                </text>
        }


                player = new YT.Player('player', {
                    width: '425',
                    @if(Model.IsAdmin)
            {
                <text>
                    height: '250',
                    </text>
            }
            else
            {
                <text>
                    height: '300',
                    </text>
            }
                    events: {
                        'onReady': onPlayerReady,
                        'onStateChange': onPlayerStateChange
                    }
                });

                loadVideos('@Model.YouTubeUserId');
            }

            function loadVideos(youTubeId) {

                $.ajax({
                    dataType: "json",
                    url: 'http://gdata.youtube.com/feeds/users/' + youTubeId + '/uploads?alt=json-in-script&max-results=50&callback=?',
                    success: function (data) {

                        var feed = data.feed;
                        var entries = feed.entry || [];

                        @if (!Model.IsAdmin) {
                    <text>
                        if (entries.length == 0) {
                            $('#videos').hide();
                            return;
                        }
                        </text>
                }

                        var videoHeight = '';
                        @if (Model.IsAdmin) {
                    // set the height of the video list if admin.
                    <text>
                        videoHeight = " style='height: 240px'";
                        </text>
                }

                        $('#videos2').html('');
                        var html = ['<ul class="videos"' + videoHeight + '>'];
                        for (var i = 0; i < entries.length; i++) {
                            var entry = entries[i];
                            var title = entry.title.$t.substr(0, 20);
                            var thumbnailUrl = entries[i].media$group.media$thumbnail[0].url;
                            var playerUrl = entries[i].media$group.media$content[0].url; // entries[i].id.$t.match('[^/]*$');
                            html.push('<li onclick="loadVideo(\'', playerUrl, '\', true)">',
                                      '<span class="titlec">', title, '...</span><br /><img src="',
                                      thumbnailUrl, '" style="width:130px;height:97px;cursor:pointer" />', '</span></li>');
                        }
                        html.push('</ul><br style="clear: left;"/>');
                        $('#videos2').html(html.join(''));
                    },
                    error: function(jqXHR, textStatus, errorThrown ) {
                        @if (Model.IsAdmin) {
                    <text>
                        $('#videos2').html('error occurred: ' + errorThrown);
                        </text>
                }
                else
                {
                    <text>
                        $('#videos2').html('');
                        </text>
                }
                    }
                });
            }

            // 4. The API will call this function when the video player is ready.
            function onPlayerReady(event) {
            }

            // 5. The API calls this function when the player's state changes.
            //    The function indicates that when playing a video (state=1),
            //    the player should play for six seconds and then stop.
            function onPlayerStateChange(event) {
            }

            function stopVideo() {
            }

        </script>
    }


    <!-- disqus

    <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        -->
    <!-- drag/drop support for logo -->
    <script type="text/javascript" src="~/Scripts/jQuery-File-Upload-jquery-ui/js/vendor/jquery.ui.widget.js"></script>
    <script type="text/javascript" src="~/Scripts/jQuery-File-Upload-jquery-ui/js/jquery.iframe-transport.js"></script>
    <script type="text/javascript" src="~/Scripts/jQuery-File-Upload-jquery-ui/js/jquery.fileupload.js"></script>
    <script type="text/javascript" src="~/Areas/Baseball/Scripts/leagueHome.js"></script>

    @if (Model.IsAdmin)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $(document).bind('drop dragover', function (e) {
                    e.preventDefault();
                });

                var elem = $('#accountLogo');
                var busyElem = $('#accountLogoBusy');
                elem.bind('dragenter', function (e) {
                    $(this).addClass('over');
                });

                elem.bind('dragleave drop', function (e) {
                    $(this).removeClass('over');
                });

                setupLogoDrop(elem, busyElem);
            });

            function setupLogoDrop(elem, busyElem) {
                elem.fileupload({
                    dataType: 'json',
                    dropZone: elem,
                    url: '/api/FileUploaderAPI/@Model.AccountId/AccountLargeLogo',
                    add: function (e, data) {

                        // set opacity of current image and show busy cusor.
                        elem.fadeTo('fast', 0.4);
                        busyElem.show('fast');

                        data.submit();
                    },
                    done: function (e, data) {
                        var seconds = new Date().getTime() / 1000;
                        elem.attr("src", data.result + "?" + seconds);
                    },
                    always: function (e, data) {
                        //remove opacity, hide progress
                        elem.fadeTo('fast', 1.0);
                        busyElem.hide('fast');
                    }
                });
            }

        </script>

    } @* Model.IsAdmin *@

}

<div class="jumbotron">
    <div id="accountName">
        @if (Model.IsAdmin)
        {
            <button type="button" class="btn btn-default" style="float:right" data-bind="click: editAccountName, visible: viewMode">edit</button>
        }

        <div data-bind="visible: viewMode">
            <h1>
                Home of the <span data-bind="text: name"></span>
                <span data-bind="visible: hasYear" class="yearEstablished">est. <span data-bind="text: firstYear"></span></span>            
            </h1>
            
            @if (Model.CurrentSeasonId != 0)
            {
                <h2>@Model.SeasonName Season</h2>
            }            
            else if (Model.IsAdmin)
            {
                <p class="help-block">You currently do not have any seasons setup. Click <b>@Html.ActionLink("here", "Index", "Season", new { area = "", accountId = Model.AccountId }, null)</b> to set or create a new season.</p>
            }



        </div>
        @if (Model.IsAdmin)
        {
            <div style="display:none" data-bind="visible: !viewMode()">
                <div style="margin:5px"><div style="display: inline-block; width:120px">Account name</div><input type="text" style="width:200px" data-bind="value: name" /></div>
                <div style="margin:5px"><div style="display: inline-block; width:120px">Year established</div><select data-bind="value: firstYear, options: availableYears"></select></div>

                <div style="margin:5px"><div style="display: inline-block; width:120px">Twitter account</div><input style="width: 200px" id='twitterId' type="text" placeholder="enter twitter account" data-bind="value: twitterAccount" /></div>

                <div style="margin: 15px; margin-left: 30px">
                    <button type="button" class="btn btn-primary" data-bind="click: saveAccountName">save</button>
                    <button type="button" class="btn btn-danger" data-bind="click: cancelEdit">cancel</button>
                </div>
            </div>
        }

        @if (ViewData["TwitterAccountName"] != null)
        {
            <div style="display:inline-block"  id="twitterDisplay">
                <a href='https://twitter.com/@ViewData["TwitterAccountName"]' class="twitter-follow-button" data-size="large" data-show-count="true" data-lang="en">Follow @@@ViewData["TwitterAccountName"]</a>
                <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
            </div>
        }

        @if (ViewData["AccountUrl"] != null)
        {
            <div class="fb-like" data-href='@ViewData["AccountUrl"]' data-send="false" data-layout="button_count" data-width="100" data-show-faces="true" data-font="segoe ui"></div>
        }

    </div>
</div>

<div class="container-fluid">
    @if (Model.ShowWorkouts)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title" style="float: left;">Workouts</h3>
                        @if (Model.IsAdmin)
                        {
                            <button style="float: right" type="button" class="btn btn-default" onclick="">add</button>
                        }
                        <div style="clear:both"></div>
                    </div>

                    <div class="panel-body">
                        workout content
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row" style="margin-top:20px">
        <div class="col-md-9">
            @{Html.RenderPartial("AnnouncementView", new SportsManager.ViewModels.AnnouncementsViewModel(Model.Controller, Model.AccountId));}
            @{Html.RenderPartial("WelcomeMessageView", new SportsManager.ViewModels.WelcomeMessageViewModel(Model.Controller, Model.AccountId));}
        </div>      

        <div class="col-md-3">
            @{Html.RenderPartial("ScoreboardView", new SportsManager.Baseball.ViewModels.ScoreboardViewModel(Model.Controller, Model.AccountId));}

            @{Html.RenderPartial("Birthdays", new SportsManager.ViewModels.BirthdayViewModel(Model.Controller, Model.AccountId));}
        </div>
    </div>

    <div class="row" style="margin-top:20px">
        <div class="col-md-4">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title" style="float: left;">Handouts</h3>

                    @if (Model.IsAdmin)
                    {
                        <h3 class="panel-title" style="float: right;"><button type="button" class="btn btn-default" onclick="">add</button></h3>
                    }
                    <div style="clear:both"></div>
                </div>

                <div class="panel-body">
                    Handout content.
                </div>
            </div>
        </div>

        @if (Model.ShowPhotoGallery)
        {
            <div id="photoGallery" data-bind="visible: photoGalleryVisible">
                <div class="col-md-8">
                    @{Html.RenderPartial("PhotoGallery", new SportsManager.ViewModels.PhotoGalleryViewModel(Model.Controller, Model.AccountId));}
                </div>
            </div>
        }
        
    </div>

    <div class="row" style="margin-top:20px">
        @if (Model.VideosEnabled && Model.ShowVideos)
        {
            <div id="videos" data-bind="visible: videosVisible" >
                <div class="col-md-8">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title" style="float: left;">Videos</h3>
                            @if (Model.IsAdmin)
                            {
                                <h3 class="panel-title" style="float: right;"><a href="">[add]</a></h3>
                            }

                            <div style="clear:both"></div>
                        </div>

                        <div class="panel-body">
                            @if (Model.IsAdmin)
                            {
                                <div data-bind="visible: viewMode">
                                    <span style="font-size: larger">YouTube User Id: <span style="font-size: larger;font-weight: bold" data-bind="text: viewUserId"></span></span>
                                    <button type="button" class="btn btn-link" style="padding:0px" data-bind="click: editYouTube">edit</button> 
                                </div>
                                <div data-bind="visible: !viewMode()">
                                    YouTube User Id: <input type="text" data-bind="value: userId" />
                                    <button type="button" class="btn btn-primary" style="padding:0px" data-bind="click: saveUserId">save</button> <button type="button" class="btn btn-warning" style="padding:0px" data-bind="click: resetUserId">cancel</button>
                                </div>
                            }
                            <div style="float:left" id="player"></div>
                            <div style="float:left" id="videos2"></div>
                            <div style="clear:both"></div>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>

    <div class="row" style="margin-top:20px">

        @if (Model.ShowHallOfFame)
        {
            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title" style="float: left;">Hall of Fame</h3>

                        @if (Model.IsAdmin)
                        {
                            <button type="button" class="btn btn-default" style="float: right" onclick="">add</button>
                        }
                        <div style="clear:both"></div>
                    </div>

                    <div class="panel-body">
                    </div>
                </div>
            </div>
        }
        
        @if (Model.ShowPlayerInterview)
        {
            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title" style="float: left; ">Player Interview</h3>

                        @if (Model.IsAdmin)
                        {
                            <button class="btn btn-default" style="float: right" onclick="">add</button>
                        }
                        <div style="clear:both"></div>
                    </div>

                    <div class="panel-body">
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row" style="margin-top:20px">
        @if (Model.TwitterEnabled)
        {
            <div class="col-md-6">
                <div id="twitterFeed" data-bind="visible: displayTwitterFeed" style="margin-top:20px;margin-left:20px;width:400px;float:left">
                    <h3 class="grad" style="margin-top:0px">Twitter</h3>
                    @if (Model.IsAdmin)
                    {
                        <div style="border: 1px solid lightGray;margin-top:5px;padding:3px">
                            <span>Twitter Widget: <input type="text" data-bind="value: twitterScript" placeholder="paste twitter widget code here" /></span><button type="button" class="btn btn-primary" style="padding:0px" data-bind="click: saveTwitterScript">save</button><br />
                            <span>Click <a href='https://twitter.com/settings/widgets' target="twitter">here</a> to visit Twitter to create a widget.</span><br /><br />
                        </div>
                    }

                    <div data-bind="html: htmlTwitterScript"></div>

                </div>
            </div>
        }

        @if (Model.FacebookEnabled)
        {
            <div class="col-md-6">
                <div id="facebookFeed" data-bind="visible: isVisible" style="margin-top:20px;margin-left:20px;width:500px;float:left">
                    <h3 class="grad" style="margin-top:0px">Facebook</h3>
                    @if (Model.IsAdmin)
                    {
                        <div style="border: 1px solid lightGray;margin-top:5px;padding:3px">
                            <span>Facebook Fan Page: <input type="text" data-bind="value: editFanPage" placeholder="enter Facebook Fan Page" /></span>
                            <button type="button" class="btn btn-primary" style="padding:0px" data-bind="click: saveFanPage">save</button>
                            <button type="button" class="btn btn-danger" style="padding:0px" data-bind="click: cancelSaveFanPage">reset</button><br />
                        </div>
                    }
                    <div class="fb-like-box" data-bind="attr: { 'data-href': fanPageUrl }" data-width="500" data-show-faces="true" data-stream="true" data-header="true"></div>
                </div>
            </div>
        }
    </div>

</div>

    <div id="disqus_thread"></div>

    <!--
        <h4>@Html.ActionLink("Announcements", "Index", "Announcements", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Handouts", "Index", "Handouts", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Sponsors", "Index", "Sponsors", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Workouts", "Index", "Workout", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h3>Widgets</h3>
        <h4>@Html.ActionLink("Hall of Fame", "Index", "HallOfFame", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Player Interview", "Index", "PlayerInterview", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Multimedia", "Index", "MultimediaGallery", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Weather", "Index", "Weather", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("RSS Feeds", "Index", "RSSFeeds", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Scoreboard", "Index", "Scoreboard", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Today's Birthdays", "Index", "Birthdays", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("League Leader", "Index", "LeagueLeader", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Generic Info Box", "Index", "InfoBox", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("User Poll", "Index", "UserPoll", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Widget Box", "Index", "WidgetBox", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
        <h4>@Html.ActionLink("Photo Gallery", "Index", "PhotoGallery", new { area = "baseball", accountId = Model.AccountId }, null)</h4>
    -->
