
@model SportsManager.Baseball.ViewModels.ScheduleViewModel
@using System.Web.Optimization

@{
	ViewBag.Title = Model.AccountName + " Schedule";
}

@section head {
    <style>
        .notCurrentMonth {
            background-color: rgba(197, 197, 197, .2);
        }
    </style>

}

<div class="jumbotron">
    <h1>@ViewBag.Title.</h1>
</div>

<div id="datepicker"></div>

<div id="schedule" class="container-fluid">
    <div class="row">
        <select class="col-sm-6" data-container="body" id="leagueSelect">
            @foreach (ModelObjects.League l in Model.Leagues)
            {
                <option id="@l.Id">@l.Name</option>
            }
        </select>
        <select data-container="body" data-bind="selectPicker: selectedTeam, selectPickerOptions: { optionsArray: leagueTeams }, optionsText: 'Name', optionsValue: 'Id', optionsCaption: 'All teams'"></select>

    </div>
    <div class="row">
        <h1 class="col-sm-12" data-bind="html: currentMonth"></h1>
    </div>
    <div class="row">
        <div class="table-responsive">
            <table class="table table-bordered col-sm-12">
                <thead>
                    <tr>
                        <th>Sunday</th>
                        <th>Monday</th>
                        <th>Tuesday</th>
                        <th>Wednesday</th>
                        <th>Thursday</th>
                        <th>Friday</th>
                        <th>Saturday</th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: gameMonth">
                    <tr data-bind="foreach: $data">
                        <td data-bind="css: { notCurrentMonth: date().getMonth() != $root.currentDate().getMonth() }">
                            <div class="row" style="margin-bottom: 10px">
                                <span class="small col-sm-8" data-bind="html: monthDayNumber"></span>
                                @if (Model.IsAdmin)
                                { 
                                <div class="col-sm-4">
                                    <button class="btn btn-default btn-xs"><span class="glyphicon glyphicon-plus"></span></button>
                                </div>
                                }
                            </div>

                            <div class="list-group" data-bind="foreach: games">
                                <div class="list-group-item">
                                    <div class="col-sm-8">
                                        <span data-bind="html: game"></span>
                                    </div>
                                    @if (Model.IsAdmin)
                                    {
                                        <div class="col-sm-4">
                                            <div class="btn-group">
                                                <button type="button" class="btn btn-default dropdown-toggle btn-xs" data-toggle="dropdown">
                                                    <span class="glyphicon glyphicon-edit"></span> <span class="caret"></span>
                                                </button>
                                                <ul class="dropdown-menu" role="menu">
                                                    <li><a href="#"><span class="glyphicon glyphicon-edit"></span> edit</a></li>
                                                    <li><a href="#"><span class="glyphicon glyphicon-remove"></span> delete</a></li>
                                                    <li class="divider"></li>
                                                    <li><a href="#"><span class="glyphicon glyphicon-bullhorn"></span> result</a></li>
                                                </ul>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {

@Scripts.Render("~/bundles/knockout")

<script type="text/javascript" src="~/Areas/Baseball/Scripts/schedule.js"></script>

<script type="text/javascript">

    $(document).ready(function () {

        initScheduleViewModel(@Model.AccountId.ToString().ToLower(), @Model.IsAdmin.ToString().ToLower());
    });

</script>


@*@Scripts.Render("~/bundles/jsrender")
        var leagueIds = new Array();


    <script id="gameTemplate" type="text/x-jsrender">
        <table class="sc"><tr><td class="sc">
            <div id="scoretitle" class="ui-widget-header">{{>leagueName}}</div>
            <div id="scoretitle" class="ui-state-highlight">{{>statusText}}</div>
            <table class="ui-widget-content" style="width:100%">

                {{if isGameComplete}}
                    <tr><td><a class="ui-state-default" href='{{>homeTeamUrl}}'>{{>homeTeamName}}</a></td><td>{{>homeScore}}</td>
                    <td rowspan="2">{{if hasGameRecap}}<a class="ui-state-default" href='javascript:showGameRecap({{>gameId}})'>Recap</a>{{/if}}</td>
                    </tr>
                    <tr><td><a class="ui-state-default" href='{{>awayTeamUrl}}'>{{>awayTeamName}}</a></td><td>{{>awayScore}}</td></tr>
                    <tr><td colspan="3"><a class="ui-state-default" href='{{>fieldUrl}}'>{{>fieldName}}</a></td></tr>
                {{else}}
                    <tr><td><a class="ui-state-default" href='{{>homeTeamUrl}}'>{{>homeTeamName}}</a></td><td>{{>gameTime}}</td></tr>
                    <tr><td><a class="ui-state-default" href='{{>awayTeamUrl}}'>{{>awayTeamName}}</a></td><td>{{>gameDate}}</td>
                    <tr><td colspan="2"><a class="ui-state-default" href='{{>fieldUrl}}'>{{>fieldName}}</a></td></tr>
                {{/if}}

            </table>
        </td></tr></table>
    </script>

    <script type="text/javascript">

        var leagueIds = new Array();

        $(document).ready(function () {

            $("#datepicker").datepicker({
                dateFormat: 'yy-mm-dd',
                changeMonth: true,
                changeYear: true,
                onSelect: function (dateText, inst) {
                    showLeagueSchedules(dateText);
                }
            });

            @{
                int i = 0;
            }

            @foreach (ModelObjects.League l in Model.Leagues) {

                @: leagueIds[@i] = @l.Id;
                i++;
            }

            showLeagueSchedules(getDate());
        });

        function showLeagueSchedules(dateText) {
            $(leagueIds).each(function() {
                showLeagueSchedule(this);
            });
        }

        function showGameRecap(gameId) {
            alert("show game recap");
        }

        function getDate() {
            return $.datepicker.formatDate('yy/mm/dd', $("#datepicker").datepicker("getDate"))
        }

        function showLeagueSchedule(leagueId) {

            $.getJSON('@Url.Action("GetGames", "LeagueSchedule", new { area = "baseball", accountId = Model.AccountId }, null)' + "?leagueSeasonId=" + leagueId + "&date=" + getDate(),
                function( data ) {
                    var id = "#"+leagueId;
                    $(id).empty();

                    if (data.length) {
                        id.append($("#gameTemplate").render(data));
                    }

                }
            );
        }

    </script>*@


}