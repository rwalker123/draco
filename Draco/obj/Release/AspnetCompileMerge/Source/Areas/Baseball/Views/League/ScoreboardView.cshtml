@model SportsManager.Baseball.ViewModels.ScoreboardViewModel

@using System.Collections.Generic;

<h4 style="float: left; margin-left:10px; margin-bottom:0px">Scoreboard</h4>
<div style="clear:both"></div>

<div style='height:200px;border:2px solid; border-radius:5px; box-shadow: 10px 10px 5px #888888; '>
    <table class="control" cellspacing="0" cellpadding="0" border="0">
        <tr>
            <td align="left" class="" nowrap="noWrap">
                <b>Today</b>
            </td>
        </tr>
        <tr>
            <td align="center">
                <table>
                    @{
                        var todayGames = DataAccess.Schedule.GetScoreboard(Model.AccountId, DateTime.Today);
                    }
                    @if (todayGames.Any())
                    {
                        DisplayScoreboard(todayGames, true);
                    }
                    else
                    {
                        <tr><td nowrap='noWrap'><i>No Games Scheduled</i></td></tr>
                    }

                </table>
            </td>
        </tr>
        <tr>
            <td align="left" class="" nowrap="noWrap">
                <b>Yesterday</b>
            </td>
        </tr>
        <tr>
            <td align="center">
                <table>
                    @{
                        DateTime yesterday = DateTime.Today.AddDays(-1.0);
                        var yesterdayGames = DataAccess.Schedule.GetScoreboard(Model.AccountId, yesterday);
                    }
                    @if (yesterdayGames.Any())
                    {
                        DisplayScoreboard(yesterdayGames, true);
                    }
                    else
                    {
                        <tr><td nowrap='noWrap'><i>No Games Scheduled</i></td></tr>
                    }
                </table>
            </td>
        </tr>
    </table>

    <table class="control" cellspacing="0" cellpadding="0" border="0">
        @{
            // go back three days for game summaries
            DateTime curDay = yesterday.AddDays(-1.0);
            var prevGames = new System.Collections.Generic.List<ModelObjects.Game>[3];
            for (int i = 0; i < 3; i++)
            {
                var games = new System.Collections.Generic.List<ModelObjects.Game>();

                games.AddRange(DataAccess.Schedule.GetScoreboard(Model.AccountId, curDay));
                prevGames[i] = games;

                curDay = curDay.AddDays(-1.0);
            }

            // parse out ones without game summaries
            foreach (var games in prevGames)
            {
                var gameSummaries = new System.Collections.Generic.List<ModelObjects.Game>();
                foreach (ModelObjects.Game g in games)
                {
                    if (DataAccess.GameStats.HasGameRecap(g.Id))
                    {
                        gameSummaries.Add(g);
                    }
                }

                games.Clear();
                games.AddRange(gameSummaries);
            }
        }

        <tr>
            <th align="left" nowrap="noWrap">
                <b>Game Summaries</b>
            </th>
        </tr>
        <tr>
            <td align="left">
                <table>
                    @{
                        bool hasSummaries = false;
                        foreach (var games in prevGames)
                        {
                            if (games.Any())
                            {
                                hasSummaries = true;
                                break;
                            }
                        }
                    }

                    @if (hasSummaries)
                    {
                        curDay = yesterday.AddDays(-1.0);

                        foreach (var games in prevGames)
                        {
                            if (games.Count > 0)
                            {
                                <tr><td><small><b>@curDay.ToString("MMM d")</b></small></td></tr>
                                DisplayScoreboard(games, false);
                            }

                            curDay = curDay.AddDays(-1.0);
                        }
                    }
                    else
                    {
                        <tr><td align='left' nowrap='noWrap'><i>No Summaries Found</i></td></tr>
                    }
                </table>
            </td>
        </tr>
    </table>
</div>
    
@functions {
    void DisplayScoreboard(IEnumerable<ModelObjects.Game> gameList, bool showNoRecords)
    {
        if (gameList.Any())
        {
            foreach (ModelObjects.Game game in gameList)
            {
                bool hasGameRecap = DataAccess.GameStats.HasGameRecap(game.Id);

                // game is not complete
                if (game.GameStatus == 0)
                {
                    Response.Write("<tr align=\"right\">");
                    Response.Write("<td align=\"left\">");
                    Response.Write("<small>" + DataAccess.Leagues.GetLeagueName(game.LeagueId) + "</small>");
                    Response.Write("</td>");
                    Response.Write("<td align=\"left\" nowrap>");
                    Response.Write("<small><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.AwayTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.AwayTeamId) + "</a>");
                    Response.Write("&nbsp;at<br><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.HomeTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.HomeTeamId) + "</a></small>");
                    Response.Write("</td>");
                    Response.Write("<td>");
                    Response.Write("&nbsp;");
                    Response.Write("</td>");
                    Response.Write("<td nowrap>");
                    Response.Write("<small>" + game.GameTime.ToShortTimeString() + "<br><a href=\"Forms/Fields.aspx?id=" + game.FieldId + "\">" + DataAccess.Fields.GetFieldShortName(game.FieldId) + "</a></small>");
                    Response.Write("</td>");
                    Response.Write("</tr>");
                }
                else if ((game.GameStatus == 2 /*Rainout*/ || game.GameStatus == 5  /* Did not report */))
                {
                    Response.Write("<tr align=\"right\">");
                    Response.Write("<td align=\"left\">");
                    Response.Write("<small>" + DataAccess.Leagues.GetLeagueName(game.LeagueId) + "</small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td align=\"left\" nowrap>");
                    Response.Write("<small><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.AwayTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.AwayTeamId) + "</a>");
                    Response.Write("&nbsp;at<br><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.HomeTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.HomeTeamId) + "</a></small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td>");
                    Response.Write("&nbsp;");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td nowrap>");
                    Response.Write("<small>");
                    Response.Write(((game.GameStatus == 2) ? "R" : "DNR"));
                    Response.Write("</small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("</tr>");
                }
                else if (game.GameStatus == 1 /* Final */||
                            game.GameStatus == 3 /* Postponed */ ||
                            game.GameStatus == 4 /* Forfeit */)
                {
                    Response.Write("<tr align=\"right\">");
                    Response.Write("<td align=\"left\">");
                    Response.Write("<small>" + DataAccess.Leagues.GetLeagueName(game.LeagueId) + "</small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td align=\"left\" nowrap>");
                    Response.Write("<small><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.AwayTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.AwayTeamId) + "</a>");
                    Response.Write("&nbsp;at<br><a href=\"Forms/Teams.aspx?leagueId=" + game.LeagueId.ToString() + "&teamId=" + game.HomeTeamId.ToString() + "\">" + DataAccess.Teams.GetTeamName(game.HomeTeamId) + "</a></small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td>");
                    Response.Write("<small>");

                    if (game.AwayScore > game.HomeScore)
                    {
                        Response.Write("<b>" + game.AwayScore.ToString() + "</b>");
                    }
                    else
                    {
                        Response.Write(game.AwayScore.ToString());
                    }

                    Response.Write("<br>");

                    if (game.AwayScore < game.HomeScore)
                    {
                        Response.Write("<b>" + game.HomeScore.ToString() + "</b>");
                    }
                    else
                    {
                        Response.Write(game.HomeScore.ToString());
                    }

                    Response.Write("</small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("<td nowrap>");

                    if (hasGameRecap)
                    {
                        Response.Write("<small><a href=\"javascript:ShowGameSummary(" + game.Id.ToString() + ")\">");
                        Response.Write((game.GameStatus == 1) ? "F" : (game.GameStatus == 3) ? "P" : "FG");
                        Response.Write("</a>");
                    }
                    else
                    {
                        Response.Write("<small>");
                        Response.Write((game.GameStatus == 1) ? "F" : (game.GameStatus == 3) ? "P" : "FG");
                    }

                    Response.Write("</small>");
                    Response.Write("</td>");
                    Response.Write("\n");
                    Response.Write("</tr>");

                }

                Response.Write("<tr><td height=\"5px\"></td></tr>");
                Response.Write("\n");
            }
        }
        else if (showNoRecords)
        {
            Response.Write("<tr><td nowrap=\"noWrap\"><i>No Games Scheduled</i></td></tr>");
        }
    }
}