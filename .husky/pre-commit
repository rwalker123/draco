echo "🔍 Running pre-commit checks for Draco Sports Manager..."

# Prevent commits to main branch
CURRENT_BRANCH=$(git symbolic-ref --short HEAD)
if [ "$CURRENT_BRANCH" = "main" ]; then
    echo "❌ Direct commits to main branch are not allowed!"
    echo ""
    echo "💡 Please create a feature branch and use pull requests:"
    echo "   git checkout -b feature/your-feature-name"
    echo "   git add ."
    echo "   git commit -m 'Your commit message'"
    echo "   git push origin feature/your-feature-name"
    echo "   # Then create a pull request on GitHub"
    echo ""
    echo "🔒 This protects the main branch and ensures code review."
    exit 1
fi

# Run detect-secrets on staged files (without baseline to avoid updates)
STAGED_FILES=$(git diff --cached --name-only | grep -v '.secrets.baseline' | grep -v 'package.json' | tr '\n' ' ')
if [ -n "$STAGED_FILES" ]; then
  echo "🔒 Running detect-secrets pre-commit scan on staged files..."
  # Scan staged files without baseline to avoid modification
  ~/Library/Python/3.9/bin/detect-secrets-hook $STAGED_FILES
  if [ $? -ne 0 ]; then
    echo "❌ detect-secrets found a potential secret in staged files. Commit blocked."
    echo ""
    echo "💡 To add a new secret to the baseline (if it's approved):"
    echo "   npm run secrets:update-baseline"
    echo "   git add .secrets.baseline && git commit -m 'Update baseline'"
    exit 1
  fi
fi

# Run backend checks
echo "📦 Checking backend..."
cd draco-nodejs/backend
npx lint-staged
BACKEND_EXIT_CODE=$?

# Run frontend-next checks
echo "🎨 Checking frontend-next..."
cd ../frontend-next
npx lint-staged
FRONTEND_NEXT_EXIT_CODE=$?

# Return to root directory
cd ../..

# Check if either failed
if [ $BACKEND_EXIT_CODE -ne 0 ] || [ $FRONTEND_NEXT_EXIT_CODE -ne 0 ]; then
    echo "❌ Pre-commit checks failed"
    exit 1
fi

echo "✅ All pre-commit checks passed" 